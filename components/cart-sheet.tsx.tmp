"use client"

import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from "@/components/ui/sheet"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { ShoppingCart, Plus, Minus, Trash2, MessageCircle } from "lucide-react"
import { useCart } from "@/lib/cart-context"
import { useState } from "react"
import { CheckoutForm } from "./checkout-form"

export function CartSheet() {
  const { state, dispatch } = useCart()
  const [showCheckout, setShowCheckout] = useState(false)

  const updateQuantity = (id: number, quantity: number) => {
    dispatch({ type: "UPDATE_QUANTITY", payload: { id, quantity } })
  }

  const removeItem = (id: number) => {
    dispatch({ type: "REMOVE_ITEM", payload: id })
  }

  return (
    <Sheet>
      <SheetTrigger asChild>
        <Button variant="ghost" size="icon" className="relative">
          <ShoppingCart className="h-5 w-5" />
          {state.itemCount > 0 && (
            <Badge className="absolute -top-2 -right-2 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs">
              {state.itemCount}
            </Badge>
          )}
        </Button>
      </SheetTrigger>
      <SheetContent className="w-full sm:max-w-lg">
        <SheetHeader>
          <SheetTitle>{showCheckout ? "Finalizar Pedido" : "Carrito de Compras"}</SheetTitle>
        </SheetHeader>
        {showCheckout ? (
          <CheckoutForm
            cartItems={state.items}
            total={state.total}
            onBack={() => setShowCheckout(false)}
            onSuccess={() => {
              dispatch({ type: "CLEAR_CART" })
              setShowCheckout(false)
            }}
          />
        ) : (
          <div className="mt-8 space-y-4">
            {state.items.length === 0 ? (
              <p className="text-center text-muted-foreground">Tu carrito está vacío</p>
            ) : (
              <>
                <div className="space-y-4">
                  {state.items.map((item) => (
                    <div key={item.id} className="flex items-center justify-between">
                      <div className="flex items-center space-x-4">
                        <div className="w-16 h-16">
                          <img
                            src={item.image_url}
                            alt={item.name}
                            className="w-full h-full object-cover rounded-lg"
                          />
                        </div>
                        <div>
                          <h3 className="font-medium">{item.name}</h3>
                          <p className="text-sm text-muted-foreground">
                            ${item.price.toFixed(2)} c/u
                          </p>
                        </div>
                      </div>
                      <div className="flex items-center space-x-2">
                        <Button
                          variant="outline"
                          size="icon"
                          onClick={() => updateQuantity(item.id, Math.max(0, item.quantity - 1))}
                        >
                          <Minus className="h-4 w-4" />
                        </Button>
                        <span className="w-8 text-center">{item.quantity}</span>
                        <Button
                          variant="outline"
                          size="icon"
                          onClick={() =>
                            updateQuantity(
                              item.id,
                              Math.min(item.stock_quantity, item.quantity + 1),
                            )
                          }
                        >
                          <Plus className="h-4 w-4" />
                        </Button>
                        <Button
                          variant="ghost"
                          size="icon"
                          onClick={() => removeItem(item.id)}
                        >
                          <Trash2 className="h-4 w-4" />
                        </Button>
                      </div>
                    </div>
                  ))}
                </div>
                <div className="border-t pt-4">
                  <div className="flex justify-between mb-4">
                    <span className="font-medium">Total:</span>
                    <span className="font-medium">${state.total.toFixed(2)}</span>
                  </div>
                  <Button
                    className="w-full"
                    onClick={() => setShowCheckout(true)}
                  >
                    <MessageCircle className="mr-2 h-4 w-4" />
                    Finalizar por WhatsApp
                  </Button>
                </div>
              </>
            )}
          </div>
        )}
      </SheetContent>
    </Sheet>
  )
}